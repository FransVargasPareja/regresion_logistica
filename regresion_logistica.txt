import pandas as pd
from sklearn.model_selection import train_test_split

# Cargar los datos desde el archivo CSV
data = pd.read_csv("divorcios.csv", delimiter="\t")

# Imprimir el encabezado del archivo CSV
print(data.columns)

# Dividir la columna en columnas separadas
data[['Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Divorcio']] = data['Q1\tQ2\tQ3\tQ4\tQ5\tDivorcio'].str.split('\t', expand=True)

# Eliminar la columna original
data.drop('Q1\tQ2\tQ3\tQ4\tQ5\tDivorcio', axis=1, inplace=True)


# Convertir las respuestas a valores numéricos según la tabla de equivalencias
equivalencias = {
    'En desacuerdo totalmente': 1,
    'En desacuerdo': 2,
    'Irrelevante': 3,
    'De acuerdo': 4,
    'De acuerdo totalmente': 5
}

data.replace({"Divorcio": equivalencias}, inplace=True)

# Dividir los datos en características (X) y etiquetas (y)
X = data.drop("Divorcio", axis=1)
y = data["Divorcio"]


from sklearn.linear_model import LogisticRegression

# Dividir los datos en conjuntos de entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Entrenar el modelo de regresión logística
model = LogisticRegression()
model.fit(X_train, y_train)

from sklearn.metrics import accuracy_score, classification_report

# Realizar predicciones en el conjunto de prueba
y_pred = model.predict(X_test)

# Calcular la precisión del modelo
accuracy = accuracy_score(y_test, y_pred)
print("Precisión del modelo: {:.2f}%".format(accuracy * 100))

# Obtener el informe de clasificación
print("\nInforme de clasificación:")
print(classification_report(y_test, y_pred))



